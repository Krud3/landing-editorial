---
export interface Props {
  values?: number[]   
  durMs?: number      
  staggerMs?: number  
  lineDurMs?: number  
  lineDelayExtraMs?: number 
}

const vals = (Astro.props.values ?? [30, 45, 70, 50, 85]).map(v =>
  Math.max(0, Math.min(100, v))
);
const n = vals.length;

const durMs = Astro.props.durMs ?? 900;
const staggerMs = Astro.props.staggerMs ?? 120;


const totalBarsTime = durMs + staggerMs * (n - 1);


const lineDurMs = Astro.props.lineDurMs ?? (n * 220);
const lineDelayExtraMs = Astro.props.lineDelayExtraMs ?? 120;
const lineDelay = totalBarsTime + lineDelayExtraMs;


const step = 100 / n;
const points = vals.map((v, i) => ({
  x: (i + 0.5) * step,  
  y: 100 - v            
}));
const pathD = points.map((p, i) => `${i ? 'L' : 'M'} ${p.x},${p.y}`).join(' ');
---

<div class="relative h-full w-full p-4" style={`--lineDelay:${lineDelay}ms; --lineDur:${lineDurMs}ms`}>

  <div
    class="grid h-full w-full items-end gap-3 rounded-lg"
    style={`grid-template-columns: repeat(${n}, minmax(0, 1fr));`}
  >
    {vals.map((v, i) => (
      <div class="relative h-full w-full overflow-hidden rounded-md flex items-end">
        <div
          class="bar w-full rounded-t-md bg-indigo-500"
          style={`--value:${v}; --dur:${durMs}ms; --delay:${i * staggerMs}ms;`}
        />
      </div>
    ))}
  </div>

  <div class="pointer-events-none absolute inset-0 p-4">
    <svg viewBox="0 0 100 100" preserveAspectRatio="none" class="h-full w-full">
      <path
        d={pathD}
        pathLength="1"
        class="line"
      />
    </svg>
  </div>
</div>

<style>

  .bar{
    height: calc(var(--value) * 1%);
    transform-origin: bottom;
    transform: scaleY(0);
    animation: bar-grow var(--dur) cubic-bezier(.22,.9,.3,1) forwards;
    animation-delay: var(--delay);
  }
  @keyframes bar-grow { to { transform: scaleY(1); } }

  .line{
    stroke: rgb(245 158 11);            
    stroke-width: 2.25;
    fill: none;
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke-dasharray: 1;                
    stroke-dashoffset: 1;
    animation: line-draw var(--lineDur) ease forwards;
    animation-delay: var(--lineDelay);
  }
  @keyframes line-draw { to { stroke-dashoffset: 0; } }

  @media (prefers-reduced-motion: reduce){
    .bar{ animation: none; transform: scaleY(1); }
    .line{ animation: none; stroke-dashoffset: 0; }
  }
</style>
