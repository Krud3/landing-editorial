---
import pcSvg from '@/assets/SVG/pc.svg?raw'
import panel1Svg from '@/assets/SVG/pcpanel1.svg?raw'
import panel2Svg from '@/assets/SVG/pcpanel2.svg?raw'
import checkSvg from '@/assets/SVG/chulo-verde2.svg?raw'

export interface Props {

  pcDur?: number
  p1Dur?: number
  p2Dur?: number

  pcDelay?: number
  p1Delay?: number
  p2Delay?: number

  p1x?: number; p1y?: number; p1w?: number; p1h?: number
  p2x?: number; p2y?: number; p2w?: number; p2h?: number

  chX?: number; chY?: number; chW?: number; chH?: number
  chDur?: number; chDelayExtra?: number
  class?: string
}


const {
  class: className = '',
  pcDur = 500,  pcDelay = 0,
  p1Dur = 600,  p1Delay = 350,
  p2Dur = 600,  p2Delay = 700,
  
  p1x = 6,  p1y = 20.5311, p1w = 30.0364, p1h = 80.0193,
  p2x = 5,  p2y = 5.4806,  p2w = 90.8842, p2h = 6.5876,
  
  chX = 55, chY = 30, chW = 24, chH = 24,
  chDur = 420, chDelayExtra = 150,
} = Astro.props

const endPc  = pcDelay + pcDur
const endP1  = p1Delay + p1Dur
const endP2  = p2Delay + p2Dur
const checkDelay = Math.max(endPc, endP1, endP2) + chDelayExtra
---

<div class={`relative w-full h-full flex items-center justify-center ${className}`}>
  <div class="relative w-full max-h-full aspect-square">
    
    <div class="abs fill-parent pc" style={`--dur:${pcDur}ms; --delay:${pcDelay}ms;`} set:html={pcSvg} />

    <div
      class="abs sprite panel1"
      style={`left:${p1x}%; top:${p1y}%; width:${p1w}%; height:${p1h}%; --dur:${p1Dur}ms; --delay:${p1Delay}ms;`}
    >
      <div class="fill-parent" set:html={panel1Svg} />
    </div>

    <div
      class="abs sprite panel2"
      style={`left:${p2x}%; top:${p2y}%; width:${p2w}%; height:${p2h}%; --dur:${p2Dur}ms; --delay:${p2Delay}ms;`}
    >
      <div class="fill-parent" set:html={panel2Svg} />
    </div>

    <div
      class="abs check"
      style={`left:${chX}%; top:${chY}%; width:${chW}%; height:${chH}%; --dur:${chDur}ms; --delay:${checkDelay}ms;`}
    >
      <div class="fill-parent" set:html={checkSvg} />
    </div>
  </div>
</div>

<style>
  .abs { position: absolute; }
  .fill-parent { width: 100%; height: 100%; }
  .abs svg { width: 100%; height: 100%; display: block; }

  .pc {
    opacity: 0;
    transform: scale(.96);
    animation: pcIn var(--dur) cubic-bezier(.2,.8,.2,1) forwards;
    animation-delay: var(--delay);
  }
  @keyframes pcIn { to { opacity: 1; transform: scale(1); } }

  .sprite {
    opacity: 0;
    transform: translateY(-12%) scale(.98);
    animation: slideIn var(--dur) cubic-bezier(.22,.9,.3,1) forwards;
    animation-delay: var(--delay);
  }
  .panel1 { transform: translateX(-12%) scale(.98); } 
  .panel2 { transform: translateY(-16%) scale(.98); } 
  @keyframes slideIn { to { opacity: 1; transform: translate(0,0) scale(1); } }

  .check {
    opacity: 0;
    transform: scale(.8) rotate(-6deg);
    filter: drop-shadow(0 6px 10px rgba(0,0,0,.12));
    animation: checkPop var(--dur) cubic-bezier(.2,.9,.25,1.2) forwards;
    animation-delay: var(--delay);
    transform-origin: center;
  }
  @keyframes checkPop {
    60% { opacity: 1; transform: scale(1.1) rotate(0deg); }
    100% { opacity: 1; transform: scale(1)   rotate(0deg); }
  }

  @media (prefers-reduced-motion: reduce){
    .pc, .sprite, .check {
      animation: none !important;
      opacity: 1 !important;
      transform: none !important;
    }
  }
</style>
